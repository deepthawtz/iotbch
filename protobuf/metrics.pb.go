// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/metrics.proto

/*
Package metrics is a generated protocol buffer package.

It is generated from these files:
	protobuf/metrics.proto

It has these top-level messages:
	Empty
	Device
	Feed
	FeedItem
*/
package metrics

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Device struct {
	Id        int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Latitude  float64 `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
	TempF     int32   `protobuf:"varint,5,opt,name=temp_f,json=tempF" json:"temp_f,omitempty"`
	Feed      *Feed   `protobuf:"bytes,6,opt,name=feed" json:"feed,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Device) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Device) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Device) GetTempF() int32 {
	if m != nil {
		return m.TempF
	}
	return 0
}

func (m *Device) GetFeed() *Feed {
	if m != nil {
		return m.Feed
	}
	return nil
}

type Feed struct {
	TemplateId string      `protobuf:"bytes,1,opt,name=template_id,json=templateId" json:"template_id,omitempty"`
	DeviceId   int32       `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	FeedItems  []*FeedItem `protobuf:"bytes,3,rep,name=feed_items,json=feedItems" json:"feed_items,omitempty"`
}

func (m *Feed) Reset()                    { *m = Feed{} }
func (m *Feed) String() string            { return proto.CompactTextString(m) }
func (*Feed) ProtoMessage()               {}
func (*Feed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Feed) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *Feed) GetDeviceId() int32 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *Feed) GetFeedItems() []*FeedItem {
	if m != nil {
		return m.FeedItems
	}
	return nil
}

type FeedItem struct {
	Ts    int64   `protobuf:"varint,1,opt,name=ts" json:"ts,omitempty"`
	Pm_25 float64 `protobuf:"fixed64,2,opt,name=pm_25,json=pm25" json:"pm_25,omitempty"`
}

func (m *FeedItem) Reset()                    { *m = FeedItem{} }
func (m *FeedItem) String() string            { return proto.CompactTextString(m) }
func (*FeedItem) ProtoMessage()               {}
func (*FeedItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FeedItem) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *FeedItem) GetPm_25() float64 {
	if m != nil {
		return m.Pm_25
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*Device)(nil), "Device")
	proto.RegisterType((*Feed)(nil), "Feed")
	proto.RegisterType((*FeedItem)(nil), "FeedItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DeviceMetrics service

type DeviceMetricsClient interface {
	AddDeviceMetrics(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error)
}

type deviceMetricsClient struct {
	cc *grpc.ClientConn
}

func NewDeviceMetricsClient(cc *grpc.ClientConn) DeviceMetricsClient {
	return &deviceMetricsClient{cc}
}

func (c *deviceMetricsClient) AddDeviceMetrics(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/DeviceMetrics/AddDeviceMetrics", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DeviceMetrics service

type DeviceMetricsServer interface {
	AddDeviceMetrics(context.Context, *Device) (*Empty, error)
}

func RegisterDeviceMetricsServer(s *grpc.Server, srv DeviceMetricsServer) {
	s.RegisterService(&_DeviceMetrics_serviceDesc, srv)
}

func _DeviceMetrics_AddDeviceMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Device)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceMetricsServer).AddDeviceMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DeviceMetrics/AddDeviceMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceMetricsServer).AddDeviceMetrics(ctx, req.(*Device))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DeviceMetrics",
	HandlerType: (*DeviceMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDeviceMetrics",
			Handler:    _DeviceMetrics_AddDeviceMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/metrics.proto",
}

func init() { proto.RegisterFile("protobuf/metrics.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xdf, 0x4a, 0x33, 0x31,
	0x10, 0xc5, 0xc9, 0xfe, 0x6b, 0x77, 0xca, 0xf7, 0x21, 0x23, 0x4a, 0xac, 0x82, 0xcb, 0x7a, 0x93,
	0xab, 0x2d, 0xac, 0xf6, 0x01, 0x04, 0x2d, 0xf4, 0xc2, 0x9b, 0xbc, 0xc0, 0xd2, 0x36, 0xb3, 0x12,
	0x68, 0xda, 0xa5, 0x9b, 0x0a, 0xbe, 0x89, 0x8f, 0x2b, 0x99, 0x6d, 0x15, 0xef, 0xe6, 0xfc, 0x26,
	0x9c, 0x93, 0x9c, 0xc0, 0x75, 0x77, 0xd8, 0xfb, 0xfd, 0xfa, 0xd8, 0xce, 0x1c, 0xf9, 0x83, 0xdd,
	0xf4, 0x15, 0x83, 0x72, 0x04, 0xe9, 0xab, 0xeb, 0xfc, 0x67, 0xf9, 0x25, 0x20, 0x7b, 0xa1, 0x0f,
	0xbb, 0x21, 0xfc, 0x0f, 0x91, 0x35, 0x52, 0x14, 0x42, 0xa5, 0x3a, 0xb2, 0x06, 0x11, 0x92, 0xdd,
	0xca, 0x91, 0x8c, 0x0a, 0xa1, 0x72, 0xcd, 0x33, 0x4e, 0x61, 0xbc, 0x5d, 0x79, 0xeb, 0x8f, 0x86,
	0x64, 0x5c, 0x08, 0x25, 0xf4, 0x8f, 0xc6, 0x3b, 0xc8, 0xb7, 0xfb, 0xdd, 0xfb, 0xb0, 0x4c, 0x78,
	0xf9, 0x0b, 0xf0, 0x0a, 0x32, 0x4f, 0xae, 0x6b, 0x5a, 0x99, 0x72, 0x42, 0x1a, 0xd4, 0x02, 0x6f,
	0x20, 0x69, 0x89, 0x8c, 0xcc, 0x0a, 0xa1, 0x26, 0x75, 0x5a, 0x2d, 0x88, 0x8c, 0x66, 0x54, 0xee,
	0x20, 0x09, 0x0a, 0xef, 0x61, 0x12, 0xce, 0x6e, 0x57, 0x9e, 0x9a, 0xd3, 0x05, 0x73, 0x0d, 0x67,
	0xb4, 0x34, 0x78, 0x0b, 0xb9, 0xe1, 0x27, 0x84, 0x75, 0xc4, 0xee, 0xe3, 0x01, 0x2c, 0x0d, 0x2a,
	0x80, 0xe0, 0xd6, 0x58, 0x4f, 0xae, 0x97, 0x71, 0x11, 0xab, 0x49, 0x9d, 0x73, 0xcc, 0xd2, 0x93,
	0xd3, 0x79, 0x7b, 0x9a, 0xfa, 0x72, 0x06, 0xe3, 0x33, 0x0e, 0x5d, 0xf8, 0x9e, 0xa3, 0x62, 0x1d,
	0xf9, 0x1e, 0x2f, 0x21, 0xed, 0x5c, 0x53, 0xcf, 0xd9, 0x5e, 0xe8, 0xa4, 0x73, 0xf5, 0xbc, 0x7e,
	0x82, 0x7f, 0x43, 0x75, 0x6f, 0x43, 0xb7, 0xf8, 0x00, 0x17, 0xcf, 0xc6, 0xfc, 0x65, 0xa3, 0x6a,
	0xd0, 0xd3, 0xac, 0xe2, 0xc6, 0xd7, 0x19, 0xff, 0xc0, 0xe3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x14, 0x09, 0xbc, 0x9e, 0x9b, 0x01, 0x00, 0x00,
}
